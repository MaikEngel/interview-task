var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.66,1,0.812]],["body/components/AppComponent.html",[0,1.078,1,1.401,2,2.163,3,1.129,4,1.129,5,2.082,6,2.082,7,2.082,8,2.082,9,0.927,10,2.082,11,2.082,12,2.531,13,2.072,14,3.485,15,2.163,16,3.859,17,2.163,18,3.485,19,1.129,20,1.458,21,2.395,22,1.129,23,0.076,24,1.676,25,1.676,26,1.676,27,2.688,28,1.197,29,2.082,30,2.7,31,1.129,32,0.927,33,1.129,34,1.129,35,2.082,36,2.688,37,2.688,38,2.082,39,3.145,40,2.082,41,2.688,42,2.082,43,0.754,44,0.927,45,1.129,46,2.082,47,2.082,48,0.057,49,0.057]],["title/modules/AppModule.html",[50,1.822,51,1.2]],["body/modules/AppModule.html",[1,1.509,3,0.847,4,0.847,9,0.695,13,1.029,23,0.078,31,1.837,32,0.695,33,0.847,34,0.847,43,1.109,44,0.695,48,0.047,49,0.047,51,2.304,52,0.847,53,1.2,54,1.562,55,1.562,56,1.562,57,1.562,58,1.661,59,3.216,60,2.948,61,3.062,62,2.948,63,3.216,64,2.948,65,2.212,66,1.562,67,1.562,68,2.025,69,2.868,70,2.212,71,2.025,72,2.025,73,2.025,74,2.067,75,2.212,76,2.868,77,1.562,78,1.257,79,2.025,80,2.025,81,2.868,82,1.562,83,1.562,84,1.029,85,2.025,86,2.868,87,1.562,88,2.868,89,2.025,90,1.257,91,2.025,92,1.257,93,2.025,94,2.025,95,2.025,96,2.025,97,2.025]],["title/modules/AppRoutingModule.html",[50,1.822,58,0.988]],["body/modules/AppRoutingModule.html",[3,1.36,4,1.36,9,1.117,23,0.076,31,1.637,32,1.117,33,1.36,34,1.36,48,0.064,49,0.064,52,1.36,58,1.637,70,2.508,75,3.018,98,3.251,99,3.251,100,3.913,101,2.606,102,2.508,103,2.018,104,3.251,105,3.251]],["title/interfaces/Task.html",[28,0.812,106,0.988]],["body/interfaces/Task.html",[0,0.67,3,0.496,4,0.496,9,0.407,12,0.736,13,0.602,15,0.736,17,0.736,19,0.496,20,0.799,21,2.372,22,0.799,23,0.078,24,1.872,28,1.528,31,1.003,32,0.407,33,0.496,34,0.496,43,0.534,44,1.036,45,1.788,48,0.031,49,0.031,84,0.602,92,0.736,103,1.872,106,0.496,107,1.185,108,0.736,109,0.736,110,0.914,111,1.473,112,2.947,113,1.85,114,1.473,115,1.473,116,3.052,117,2.327,118,0.914,119,0.914,120,0.914,121,0.914,122,0.914,123,3.5,124,0.914,125,1.186,126,2.122,127,1.85,128,0.914,129,0.914,130,0.914,131,0.914,132,0.914,133,0.914,134,0.914,135,0.914,136,3.133,137,1.398,138,0.914,139,0.914,140,0.914,141,0.914,142,0.914,143,0.914,144,1.473,145,0.914,146,0.914,147,0.602,148,0.914,149,0.914,150,0.914,151,1.473,152,1.473,153,1.186,154,2.122,155,2.721,156,2.122,157,2.327,158,0.914,159,0.914,160,1.473,161,0.914,162,1.473,163,0.914,164,0.914,165,2.122,166,1.473,167,1.85,168,0.914,169,0.914,170,0.914,171,1.473,172,0.914,173,1.85,174,0.914,175,0.914,176,0.914,177,0.971,178,0.914,179,0.914,180,0.914,181,0.914,182,0.914,183,0.914,184,1.85,185,1.85,186,0.914,187,1.473,188,2.122,189,1.473,190,2.487,191,0.914,192,1.473,193,2.883,194,0.914,195,1.473,196,1.473,197,0.914,198,0.914,199,0.914,200,1.473,201,1.473,202,1.473,203,0.914,204,1.473,205,1.473,206,1.473,207,1.473,208,1.473,209,1.473,210,1.473,211,0.914,212,0.914,213,0.914,214,0.914,215,0.914,216,0.914]],["title/components/TodoListComponent.html",[0,0.66,43,0.66]],["body/components/TodoListComponent.html",[0,0.707,1,0.296,2,0.909,3,0.36,4,0.36,5,0.664,6,0.664,7,0.664,8,0.664,9,0.296,11,0.664,12,1.4,13,1.147,15,0.909,17,0.909,19,0.36,20,0.613,21,1.919,22,1.058,23,0.078,24,1.4,25,1.823,26,1.823,28,1.497,29,2.836,31,0.8,32,0.296,33,0.36,34,0.36,35,0.664,36,1.129,37,1.129,38,0.664,39,1.74,40,0.664,41,1.475,42,0.664,43,0.769,44,1.108,45,1.792,46,0.664,47,0.664,48,0.024,49,0.024,84,1.9,92,0.534,103,1.57,106,0.36,108,2.321,109,0.534,110,0.664,111,0.664,112,2.488,113,0.664,114,0.664,115,1.475,116,3.096,117,1.951,118,0.664,119,0.664,120,0.664,121,0.664,122,1.129,123,3.475,124,1.129,125,1.4,126,2.576,127,2.123,128,1.129,129,1.129,130,1.475,131,1.129,132,0.664,133,0.664,134,0.664,135,0.664,136,3.037,137,1.399,138,1.475,139,1.129,140,1.129,141,1.74,142,1.475,143,0.664,144,1.475,145,1.475,146,0.664,147,0.437,148,0.664,149,0.664,150,0.664,151,1.129,152,1.129,153,0.909,154,1.74,155,2.836,156,1.74,157,2.385,158,1.475,159,0.664,160,1.129,161,0.664,162,1.129,163,0.664,164,0.664,165,1.951,166,1.129,167,1.475,168,1.129,169,1.475,170,0.664,171,1.129,172,0.664,173,1.475,174,1.475,175,0.664,176,0.664,177,0.744,178,0.664,179,0.664,180,1.129,181,1.74,182,0.664,183,0.664,184,1.74,185,2.488,186,1.74,187,1.129,188,1.74,189,1.129,190,2.123,191,1.74,192,1.129,193,2.576,194,0.664,195,1.129,196,1.129,197,0.664,198,0.664,199,0.664,200,1.129,201,1.129,202,1.129,203,0.664,204,1.129,205,1.129,206,1.129,207,1.129,208,1.129,209,1.129,210,1.129,211,1.74,212,0.664,213,0.664,214,0.664,215,0.664,216,0.664,217,1.464,218,1.464,219,0.86,220,0.86,221,0.86,222,0.86,223,0.86,224,0.86,225,2.53,226,0.86,227,0.86,228,0.86,229,0.86,230,0.86,231,0.86,232,0.86,233,0.86,234,0.86,235,0.86,236,0.86,237,0.86,238,2.256,239,2.256,240,1.464]],["title/coverage.html",[241,2.461]],["body/coverage.html",[0,1.084,1,1.101,9,1.101,10,2.472,22,1.341,23,0.073,28,1.101,43,0.896,48,0.063,49,0.063,84,1.972,90,1.989,106,1.341,108,2.408,109,2.408,137,1.629,147,1.972,241,2.472,242,3.205,243,3.205,244,3.205,245,3.205,246,3.205,247,3.205,248,3.205,249,3.205,250,2.472,251,3.205,252,3.205,253,3.205,254,3.205]],["title/dependencies.html",[53,1.185,255,1.534]],["body/dependencies.html",[23,0.077,32,1.049,48,0.061,49,0.061,53,1.278,74,2.338,77,2.906,78,2.338,82,2.356,83,2.356,87,2.356,102,2.356,256,3.054,257,4.566,258,3.054,259,3.054,260,3.054,261,3.054,262,3.054,263,3.054,264,3.054,265,3.054,266,3.054,267,3.054,268,3.054,269,3.054,270,3.054,271,3.054,272,3.054]],["title/index.html",[19,0.832,273,1.989,274,1.989]],["body/index.html",[0,0.603,23,0.049,27,2.314,28,1.456,44,1.184,45,1.255,48,0.049,49,0.049,53,0.903,74,1.34,125,1.34,137,1.097,177,1.097,275,3,276,2.16,277,2.16,278,3,279,4.157,280,3.726,281,3.448,282,4.052,283,3,284,3,285,2.16,286,2.16,287,2.16,288,2.16,289,2.16,290,3,291,2.16,292,2.16,293,3,294,2.16,295,3,296,3.726,297,3,298,2.16,299,2.16,300,2.16,301,1.666,302,2.16,303,2.16,304,2.16,305,3,306,3,307,2.16,308,2.16,309,2.16,310,2.16,311,2.16,312,2.16,313,2.16,314,2.16,315,2.16,316,2.16,317,2.16,318,2.16,319,2.16,320,2.16,321,2.16,322,2.16,323,3,324,2.16,325,2.16,326,3.726,327,3,328,2.16,329,2.16,330,2.16,331,2.16,332,2.16,333,2.16,334,2.16,335,2.16,336,2.16,337,3,338,2.16,339,2.16,340,2.16,341,2.16,342,3,343,3,344,2.16,345,2.16,346,2.16,347,3.448,348,3.726,349,2.16,350,2.16,351,2.16,352,3,353,2.659,354,3,355,2.16,356,2.16,357,2.16,358,2.16,359,2.16,360,2.16,361,3,362,2.16,363,2.16,364,2.16,365,2.16,366,2.16,367,2.16,368,3,369,2.16,370,2.16,371,3,372,2.16,373,2.16,374,2.16,375,2.16,376,2.16,377,2.16,378,2.16]],["title/modules.html",[52,1.335]],["body/modules.html",[23,0.067,48,0.067,49,0.067,51,1.801,52,1.482,58,1.482,78,2.199,379,3.544,380,3.544,381,4.118,382,3.544,383,3.544]],["title/overview.html",[384,2.461]],["body/overview.html",[1,1.512,2,1.681,23,0.077,43,1.08,48,0.057,49,0.057,51,2.368,52,1.133,53,1.46,54,2.088,55,2.088,56,2.088,57,2.088,58,1.616,59,3.259,60,2.981,61,3.259,62,2.981,63,3.259,64,2.981,65,2.693,66,2.088,67,2.088,106,1.133,147,1.376,177,1.376,353,2.693,384,2.088]],["title/properties.html",[20,1.185,255,1.534]],["body/properties.html",[20,1.518,23,0.072,48,0.068,49,0.068,385,3.629,386,3.629]],["title/routes.html",[101,1.98]],["body/routes.html",[23,0.068,48,0.068,49,0.068,101,2.28]],["title/miscellaneous/variables.html",[387,1.534,388,2.184]],["body/miscellaneous/variables.html",[19,1.228,22,1.228,23,0.075,25,1.822,26,1.822,44,1.518,45,1.848,48,0.06,49,0.06,90,2.281,153,1.822,250,2.264,301,2.264,387,2.264,388,2.264,389,2.936,390,2.936,391,2.936,392,3.675,393,3.675,394,3.675,395,3.675,396,3.675,397,3.675,398,3.675,399,3.675,400,3.675,401,3.675,402,3.675,403,3.675,404,2.936,405,2.936,406,2.936,407,2.936]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":147,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":386,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":177,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"index.html":{},"overview.html":{}}}],["100",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["14.0.1",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["15.2.0",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["1:439793892035:web:56d722041605770508c076",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":353,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.11.6",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["439793892035",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["73",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["actions",{"_index":285,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["add",{"_index":126,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["additional",{"_index":338,"title":{},"body":{"index.html":{}}}],["adds",{"_index":144,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["addtask",{"_index":145,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["again",{"_index":350,"title":{},"body":{"index.html":{}}}],["aizasyawu3lpdoyafbit4xpaohbvlj2hmqyqaxw",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":337,"title":{},"body":{"index.html":{}}}],["allows",{"_index":124,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["angular",{"_index":352,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/firestore",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/firestore",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["angular/forms",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angularfirestoremodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["apikey",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["app.component",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":282,"title":{},"body":{"index.html":{}}}],["applicationlayout",{"_index":324,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":51,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":58,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":201,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["async",{"_index":185,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["authdomain",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":383,"title":{},"body":{"modules.html":{}}}],["await",{"_index":188,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["backend",{"_index":302,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":113,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["browse",{"_index":381,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["called",{"_index":139,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["choose",{"_index":369,"title":{},"body":{"index.html":{}}}],["class",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["clean",{"_index":317,"title":{},"body":{"index.html":{}}}],["clicks",{"_index":364,"title":{},"body":{"index.html":{}}}],["clients",{"_index":313,"title":{},"body":{"index.html":{}}}],["clone",{"_index":370,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":316,"title":{},"body":{"index.html":{}}}],["coll",{"_index":133,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["collection",{"_index":117,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["collection(this.firestore",{"_index":134,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["comfortable",{"_index":305,"title":{},"body":{"index.html":{}}}],["command",{"_index":366,"title":{},"body":{"index.html":{}}}],["commands",{"_index":365,"title":{},"body":{"index.html":{}}}],["commented",{"_index":318,"title":{},"body":{"index.html":{}}}],["compiles",{"_index":373,"title":{},"body":{"index.html":{}}}],["complete",{"_index":128,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["completed",{"_index":112,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["completed/uncompleted",{"_index":288,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["console",{"_index":208,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["console.log('no",{"_index":209,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["constructor",{"_index":219,"title":{},"body":{"components/TodoListComponent.html":{}}}],["constructor(firestore",{"_index":220,"title":{},"body":{"components/TodoListComponent.html":{}}}],["constructor(public",{"_index":132,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["contact",{"_index":336,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":241,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":286,"title":{},"body":{"index.html":{}}}],["current",{"_index":157,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["currenttask",{"_index":175,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["currenttask.indexof(task",{"_index":176,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["currenttask.splice(i",{"_index":179,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["data",{"_index":202,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["database",{"_index":301,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["databaseurl",{"_index":406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decided",{"_index":346,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["delete",{"_index":289,"title":{},"body":{"index.html":{}}}],["deletetask",{"_index":174,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["demonstrate",{"_index":307,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":110,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["developing",{"_index":311,"title":{},"body":{"index.html":{}}}],["development",{"_index":376,"title":{},"body":{"index.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["directives",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["displays",{"_index":122,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["doc",{"_index":119,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["doc(this.firestore",{"_index":195,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["document",{"_index":193,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["documentation",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":362,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["downloadfinishedtasks",{"_index":211,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["downloadfirebase",{"_index":181,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["downloadtasks",{"_index":191,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["dynamic",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["empty",{"_index":150,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["environment",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":206,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["etc",{"_index":342,"title":{},"body":{"index.html":{}}}],["exactly",{"_index":321,"title":{},"body":{"index.html":{}}}],["example",{"_index":357,"title":{},"body":{"index.html":{}}}],["exist",{"_index":204,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["exists",{"_index":200,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["expect",{"_index":315,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["false",{"_index":153,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":334,"title":{},"body":{"index.html":{}}}],["feel",{"_index":304,"title":{},"body":{"index.html":{}}}],["fetches",{"_index":180,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["few",{"_index":363,"title":{},"body":{"index.html":{}}}],["ff1e2",{"_index":393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff1e2.appspot.com",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff1e2.firebaseapp.com",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["finished",{"_index":155,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["finishedtaskref",{"_index":212,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["finishedtasks",{"_index":136,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["finishedtasksnap",{"_index":213,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["finishedtasksnap.data()['finishedtasks",{"_index":216,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["finishedtasksnap.exists",{"_index":215,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["finishedtasktitle",{"_index":160,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["firebase",{"_index":391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase/firestore",{"_index":121,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["firebaseconfig",{"_index":405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestore",{"_index":116,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["fishedtasks",{"_index":168,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["following",{"_index":284,"title":{},"body":{"index.html":{}}}],["font",{"_index":327,"title":{},"body":{"index.html":{}}}],["fonts",{"_index":329,"title":{},"body":{"index.html":{}}}],["fork",{"_index":294,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":348,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":343,"title":{},"body":{"index.html":{}}}],["getauth",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["getdoc",{"_index":118,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["getdoc(finishedtaskref",{"_index":214,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["getdoc(tasksref",{"_index":198,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["getfirestore",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":273,"title":{"index.html":{}},"body":{}}],["git",{"_index":290,"title":{},"body":{"index.html":{}}}],["given",{"_index":178,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["google",{"_index":328,"title":{},"body":{"index.html":{}}}],["graph",{"_index":382,"title":{},"body":{"modules.html":{}}}],["here",{"_index":356,"title":{},"body":{"index.html":{}}}],["hot",{"_index":374,"title":{},"body":{"index.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["identifier",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["imagine",{"_index":309,"title":{},"body":{"index.html":{}}}],["implement",{"_index":280,"title":{},"body":{"index.html":{}}}],["implements",{"_index":131,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["important",{"_index":297,"title":{},"body":{"index.html":{}}}],["imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":351,"title":{},"body":{"index.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["initializeapp",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":140,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["install",{"_index":368,"title":{},"body":{"index.html":{}}}],["install3",{"_index":372,"title":{},"body":{"index.html":{}}}],["interface",{"_index":106,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":107,"title":{},"body":{"interfaces/Task.html":{}}}],["interview",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["items",{"_index":135,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["layout",{"_index":355,"title":{},"body":{"index.html":{}}}],["layout/design",{"_index":320,"title":{},"body":{"index.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["library",{"_index":344,"title":{},"body":{"index.html":{}}}],["library/package",{"_index":339,"title":{},"body":{"index.html":{}}}],["line",{"_index":367,"title":{},"body":{"index.html":{}}}],["link",{"_index":276,"title":{},"body":{"index.html":{}}}],["list",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["list.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.html",{"_index":129,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["list.component.scss",{"_index":130,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["list.component.ts",{"_index":109,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["list.component.ts:105",{"_index":231,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:119",{"_index":226,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:127",{"_index":229,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:139",{"_index":227,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:154",{"_index":224,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:29",{"_index":221,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:30",{"_index":233,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:37",{"_index":236,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:42",{"_index":232,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:47",{"_index":234,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:52",{"_index":228,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:60",{"_index":230,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:75",{"_index":237,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:90",{"_index":235,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list/todo",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["log",{"_index":205,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["look",{"_index":358,"title":{},"body":{"index.html":{}}}],["mark",{"_index":287,"title":{},"body":{"index.html":{}}}],["matching",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":314,"title":{},"body":{"index.html":{}}}],["message",{"_index":207,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["messagingsenderid",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["methods",{"_index":218,"title":{},"body":{"components/TodoListComponent.html":{}}}],["miscellaneous",{"_index":387,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":50,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":52,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":278,"title":{},"body":{"index.html":{}}}],["moves",{"_index":162,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["new",{"_index":137,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"index.html":{}}}],["newtask",{"_index":138,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["ng",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":141,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["notes",{"_index":298,"title":{},"body":{"index.html":{}}}],["npm",{"_index":371,"title":{},"body":{"index.html":{}}}],["object",{"_index":390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obligated",{"_index":291,"title":{},"body":{"index.html":{}}}],["official",{"_index":310,"title":{},"body":{"index.html":{}}}],["one",{"_index":312,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":115,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["optional",{"_index":223,"title":{},"body":{"components/TodoListComponent.html":{}}}],["out",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":384,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":255,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":222,"title":{},"body":{"components/TodoListComponent.html":{}}}],["perform",{"_index":283,"title":{},"body":{"index.html":{}}}],["picture",{"_index":332,"title":{},"body":{"index.html":{}}}],["please",{"_index":293,"title":{},"body":{"index.html":{}}}],["popperjs/core",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["prepared",{"_index":360,"title":{},"body":{"index.html":{}}}],["process",{"_index":275,"title":{},"body":{"index.html":{}}}],["production",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":319,"title":{},"body":{"index.html":{}}}],["project",{"_index":279,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"properties.html":{}}}],["provideauth",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provided",{"_index":323,"title":{},"body":{"index.html":{}}}],["providefirebaseapp",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providers",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":217,"title":{},"body":{"components/TodoListComponent.html":{}}}],["question",{"_index":335,"title":{},"body":{"index.html":{}}}],["quick",{"_index":349,"title":{},"body":{"index.html":{}}}],["react",{"_index":354,"title":{},"body":{"index.html":{}}}],["read",{"_index":277,"title":{},"body":{"index.html":{}}}],["reference",{"_index":192,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["reloads",{"_index":375,"title":{},"body":{"index.html":{}}}],["remove",{"_index":127,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["removes",{"_index":165,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["repository",{"_index":295,"title":{},"body":{"index.html":{}}}],["represents",{"_index":111,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["required",{"_index":300,"title":{},"body":{"index.html":{}}}],["reset",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restoretask",{"_index":169,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["results",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":148,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["returns",{"_index":225,"title":{},"body":{"components/TodoListComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["routermodule",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":101,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":99,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":377,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["scope",{"_index":299,"title":{},"body":{"index.html":{}}}],["screen",{"_index":322,"title":{},"body":{"index.html":{}}}],["section",{"_index":325,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["serve",{"_index":378,"title":{},"body":{"index.html":{}}}],["service",{"_index":303,"title":{},"body":{"index.html":{}}}],["set",{"_index":187,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["setdoc",{"_index":120,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["setdoc(doc(this.firestore",{"_index":189,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["sets",{"_index":149,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["setup",{"_index":359,"title":{},"body":{"index.html":{}}}],["similar",{"_index":330,"title":{},"body":{"index.html":{}}}],["simple",{"_index":281,"title":{},"body":{"index.html":{}}}],["skills",{"_index":308,"title":{},"body":{"index.html":{}}}],["snapshot",{"_index":196,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["src/.../environment.ts",{"_index":389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/todo",{"_index":108,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{}}}],["src/environments/environment.ts",{"_index":250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":296,"title":{},"body":{"index.html":{}}}],["started",{"_index":274,"title":{"index.html":{}},"body":{}}],["statements",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["such",{"_index":210,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["support",{"_index":379,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":333,"title":{},"body":{"index.html":{}}}],["svg",{"_index":380,"title":{},"body":{"modules.html":{}}}],["table",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":28,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"index.html":{}}}],["task.title",{"_index":239,"title":{},"body":{"components/TodoListComponent.html":{}}}],["taskes",{"_index":238,"title":{},"body":{"components/TodoListComponent.html":{}}}],["tasks",{"_index":123,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["tasksref",{"_index":194,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["taskssnap",{"_index":197,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["taskssnap.data()['tasks",{"_index":203,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["taskssnap.exists",{"_index":199,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["tasktitle",{"_index":171,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.deletetask(task",{"_index":166,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.downloadfinishedtasks",{"_index":183,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.downloadfirebase",{"_index":143,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.downloadtasks",{"_index":182,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.finishedtasks",{"_index":173,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.finishedtasks.indexof(task",{"_index":170,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.finishedtasks.push",{"_index":163,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.finishedtasks[i].title",{"_index":172,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.newtask",{"_index":152,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.newtask.trim().length",{"_index":146,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.tasks",{"_index":167,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.tasks.indexof(task",{"_index":159,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.tasks.push",{"_index":151,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.tasks[i].title",{"_index":161,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["this.updatefirestore",{"_index":156,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["tickoff",{"_index":158,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["times",{"_index":240,"title":{},"body":{"components/TodoListComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["todo",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["todolist",{"_index":190,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["todolistcomponent",{"_index":43,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["true",{"_index":164,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["tslib",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Task.html":{},"components/TodoListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":184,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["updatefirestore",{"_index":186,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["updates",{"_index":154,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["url",{"_index":407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":326,"title":{},"body":{"index.html":{}}}],["used",{"_index":331,"title":{},"body":{"index.html":{}}}],["user",{"_index":125,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{},"index.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/TodoListComponent.html":{}}}],["variable",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":388,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":385,"title":{},"body":{"properties.html":{}}}],["void",{"_index":142,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["vue",{"_index":347,"title":{},"body":{"index.html":{}}}],["vuerouter",{"_index":340,"title":{},"body":{"index.html":{}}}],["vuetify",{"_index":345,"title":{},"body":{"index.html":{}}}],["vuex",{"_index":341,"title":{},"body":{"index.html":{}}}],["want",{"_index":306,"title":{},"body":{"index.html":{}}}],["whether",{"_index":114,"title":{},"body":{"interfaces/Task.html":{},"components/TodoListComponent.html":{}}}],["work",{"_index":292,"title":{},"body":{"index.html":{}}}],["working",{"_index":361,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'interview-task'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'interview-task';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            TodoListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { FormsModule } from '@angular/forms';\n\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { environment } from '../environments/environment';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { provideAuth, getAuth } from '@angular/fire/auth';\n\n@NgModule({\n  declarations: [AppComponent, TodoListComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    AngularFirestoreModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideFirestore(() => getFirestore()),\n    provideAuth(() => getAuth()),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/todo-list/todo-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a task in the todo list.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the task is completed or not.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the task.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Firestore, collection, getDoc } from '@angular/fire/firestore';\nimport { doc, setDoc } from 'firebase/firestore';\n\n/**\n * Represents a task in the todo list.\n */\ninterface Task {\n  /**\n   * The title of the task.\n   */\n  title: string;\n  /**\n   * Whether the task is completed or not.\n   */\n  completed: boolean;\n}\n\n/**\n * The TodoListComponent displays a list of tasks and allows the user to\n * add, remove, and complete tasks.\n */\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss'],\n})\nexport class TodoListComponent implements OnInit {\n  constructor(public firestore: Firestore) {\n    const coll = collection(this.firestore, 'items');\n  }\n\n  /**\n   * The list of tasks that are not yet completed.\n   */\n  tasks: Task[] = [];\n\n  /**\n   * The list of tasks that have been completed.\n   */\n  finishedTasks: Task[] = [];\n\n  /**\n   * The title of the new task that the user wants to add.\n   */\n  newTask: string = '';\n\n  /**\n   * Called when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.downloadFirebase();\n  }\n\n  /**\n   * Adds a new task to the list of tasks.\n   */\n\n  addTask = () => {\n    if (this.newTask.trim().length === 0) {\n      return;\n    }\n    // adds a new task to the list of tasks and sets the new task title to an empty string\n    this.tasks.push({ title: this.newTask, completed: false });\n    this.newTask = '';\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n  /**\n   * Add the task to finishedTasks and remove the current task from the list of tasks.\n   */\n\n  tickOff = (task: Task) => {\n    let i = this.tasks.indexOf(task);\n    let finishedTaskTitle = this.tasks[i].title;\n    // moves a task from the tasks list to the finishedTasks list\n    this.finishedTasks.push({ title: finishedTaskTitle, completed: true });\n    // removes the task from the tasks list\n    this.deleteTask(task, this.tasks);\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n    /**\n   * Add the task to tasks list and remove the current task from the list of fishedTasks.\n   */\n\n  restoreTask = (task: Task) => {\n    let i = this.finishedTasks.indexOf(task);\n    let taskTitle = this.finishedTasks[i].title;\n    // moves a task from the finishedTasks list to the tasks list\n    this.tasks.push({ title: taskTitle, completed: false });\n    // removes the task from the finishedTasks list\n    this.deleteTask(task, this.finishedTasks);\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n      /**\n   * Removes the current task from tasks or finishedTasks list.\n   */\n\n  deleteTask = (task: Task, currentTask: any) => {\n    let i = currentTask.indexOf(task);\n    if (i > -1) {\n      // removes a task from a given list\n      currentTask.splice(i, 1);\n    }\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n/**\n * Fetches tasks and finished tasks from Firestore\n */\n\n  downloadFirebase() {\n    this.downloadTasks();\n    this.downloadFinishedTasks();\n  }\n\n  /**\n   * Update the tasks and finished tasks in Firestore.\n   */\n  async updateFirestore() {\n    // Set the 'tasks' collection in Firestore to the current list of tasks\n    await setDoc(doc(this.firestore, 'todolist', 'tasks'), {\n      tasks: this.tasks,\n    });\n\n    // Set the 'finishedTasks' collection in Firestore to the current list of finished tasks\n    await setDoc(doc(this.firestore, 'todolist', 'finishedTasks'), {\n      finishedTasks: this.finishedTasks,\n    });\n  }\n\n  async downloadTasks() {\n    // Get a reference to the 'tasks' document in the 'todolist' collection\n    const tasksRef = doc(this.firestore, 'todolist', 'tasks');\n    // Get the snapshot of the 'tasks' document\n    const tasksSnap = await getDoc(tasksRef);\n\n    if (tasksSnap.exists()) {\n      // If the 'tasks' document exists, update the tasks array with the tasks data from Firestore\n      this.tasks = tasksSnap.data()['tasks'];\n    } else {\n      // If the 'tasks' document does not exist, log an error message to the console\n      console.log('No such document!');\n    }\n  }\n\n  async downloadFinishedTasks() {\n    // Get a reference to the 'finishedTasks' document in the 'todolist' collection\n    const finishedTaskRef = doc(this.firestore, 'todolist', 'finishedTasks');\n    // Get the snapshot of the 'finishedTasks' document\n    const finishedTaskSnap = await getDoc(finishedTaskRef);\n\n    if (finishedTaskSnap.exists()) {\n      // If the 'finishedTasks' document exists, update the finishedTasks array with the finished tasks data from Firestore\n      this.finishedTasks = finishedTaskSnap.data()['finishedTasks'];\n    } else {\n      // If the 'finishedTasks' document does not exist, log an error message to the console\n      console.log('No such document!');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo-list/todo-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        The TodoListComponent displays a list of tasks and allows the user to\nadd, remove, and complete tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-list\n            \n\n            \n                styleUrls\n                ./todo-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./todo-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                finishedTasks\n                            \n                            \n                                    Public\n                                firestore\n                            \n                            \n                                newTask\n                            \n                            \n                                restoreTask\n                            \n                            \n                                tasks\n                            \n                            \n                                tickOff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadFinishedTasks\n                            \n                            \n                                downloadFirebase\n                            \n                            \n                                    Async\n                                downloadTasks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateFirestore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/todo-list/todo-list.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downloadFinishedTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadFinishedTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadFirebase\n                        \n                    \n                \n            \n            \n                \ndownloadFirebase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:119\n                \n            \n\n\n            \n                \n                    Fetches tasks and finished tasks from Firestore\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downloadTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:52\n                \n            \n\n\n            \n                \n                    Called when the component is initialized.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateFirestore\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFirestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/todo-list/todo-list.component.ts:127\n                \n            \n\n\n            \n                \n                    Update the tasks and finished tasks in Firestore.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:60\n                        \n                    \n\n            \n                \n                    Adds a new task to the list of tasks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:105\n                        \n                    \n\n            \n                \n                    Removes the current task from tasks or finishedTasks list.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finishedTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:42\n                        \n                    \n\n            \n                \n                    The list of tasks that have been completed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:47\n                        \n                    \n\n            \n                \n                    The title of the new task that the user wants to add.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:90\n                        \n                    \n\n            \n                \n                    Add the task to tasks list and remove the current task from the list of fishedTasks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:37\n                        \n                    \n\n            \n                \n                    The list of tasks that are not yet completed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tickOff\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/todo-list/todo-list.component.ts:75\n                        \n                    \n\n            \n                \n                    Add the task to finishedTasks and remove the current task from the list of tasks.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Firestore, collection, getDoc } from '@angular/fire/firestore';\nimport { doc, setDoc } from 'firebase/firestore';\n\n/**\n * Represents a task in the todo list.\n */\ninterface Task {\n  /**\n   * The title of the task.\n   */\n  title: string;\n  /**\n   * Whether the task is completed or not.\n   */\n  completed: boolean;\n}\n\n/**\n * The TodoListComponent displays a list of tasks and allows the user to\n * add, remove, and complete tasks.\n */\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss'],\n})\nexport class TodoListComponent implements OnInit {\n  constructor(public firestore: Firestore) {\n    const coll = collection(this.firestore, 'items');\n  }\n\n  /**\n   * The list of tasks that are not yet completed.\n   */\n  tasks: Task[] = [];\n\n  /**\n   * The list of tasks that have been completed.\n   */\n  finishedTasks: Task[] = [];\n\n  /**\n   * The title of the new task that the user wants to add.\n   */\n  newTask: string = '';\n\n  /**\n   * Called when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.downloadFirebase();\n  }\n\n  /**\n   * Adds a new task to the list of tasks.\n   */\n\n  addTask = () => {\n    if (this.newTask.trim().length === 0) {\n      return;\n    }\n    // adds a new task to the list of tasks and sets the new task title to an empty string\n    this.tasks.push({ title: this.newTask, completed: false });\n    this.newTask = '';\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n  /**\n   * Add the task to finishedTasks and remove the current task from the list of tasks.\n   */\n\n  tickOff = (task: Task) => {\n    let i = this.tasks.indexOf(task);\n    let finishedTaskTitle = this.tasks[i].title;\n    // moves a task from the tasks list to the finishedTasks list\n    this.finishedTasks.push({ title: finishedTaskTitle, completed: true });\n    // removes the task from the tasks list\n    this.deleteTask(task, this.tasks);\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n    /**\n   * Add the task to tasks list and remove the current task from the list of fishedTasks.\n   */\n\n  restoreTask = (task: Task) => {\n    let i = this.finishedTasks.indexOf(task);\n    let taskTitle = this.finishedTasks[i].title;\n    // moves a task from the finishedTasks list to the tasks list\n    this.tasks.push({ title: taskTitle, completed: false });\n    // removes the task from the finishedTasks list\n    this.deleteTask(task, this.finishedTasks);\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n      /**\n   * Removes the current task from tasks or finishedTasks list.\n   */\n\n  deleteTask = (task: Task, currentTask: any) => {\n    let i = currentTask.indexOf(task);\n    if (i > -1) {\n      // removes a task from a given list\n      currentTask.splice(i, 1);\n    }\n    // updates the tasks and finished tasks in Firestore\n    this.updateFirestore();\n  };\n\n/**\n * Fetches tasks and finished tasks from Firestore\n */\n\n  downloadFirebase() {\n    this.downloadTasks();\n    this.downloadFinishedTasks();\n  }\n\n  /**\n   * Update the tasks and finished tasks in Firestore.\n   */\n  async updateFirestore() {\n    // Set the 'tasks' collection in Firestore to the current list of tasks\n    await setDoc(doc(this.firestore, 'todolist', 'tasks'), {\n      tasks: this.tasks,\n    });\n\n    // Set the 'finishedTasks' collection in Firestore to the current list of finished tasks\n    await setDoc(doc(this.firestore, 'todolist', 'finishedTasks'), {\n      finishedTasks: this.finishedTasks,\n    });\n  }\n\n  async downloadTasks() {\n    // Get a reference to the 'tasks' document in the 'todolist' collection\n    const tasksRef = doc(this.firestore, 'todolist', 'tasks');\n    // Get the snapshot of the 'tasks' document\n    const tasksSnap = await getDoc(tasksRef);\n\n    if (tasksSnap.exists()) {\n      // If the 'tasks' document exists, update the tasks array with the tasks data from Firestore\n      this.tasks = tasksSnap.data()['tasks'];\n    } else {\n      // If the 'tasks' document does not exist, log an error message to the console\n      console.log('No such document!');\n    }\n  }\n\n  async downloadFinishedTasks() {\n    // Get a reference to the 'finishedTasks' document in the 'todolist' collection\n    const finishedTaskRef = doc(this.firestore, 'todolist', 'finishedTasks');\n    // Get the snapshot of the 'finishedTasks' document\n    const finishedTaskSnap = await getDoc(finishedTaskRef);\n\n    if (finishedTaskSnap.exists()) {\n      // If the 'finishedTasks' document exists, update the finishedTasks array with the finished tasks data from Firestore\n      this.finishedTasks = finishedTaskSnap.data()['finishedTasks'];\n    } else {\n      // If the 'finishedTasks' document does not exist, log an error message to the console\n      console.log('No such document!');\n    }\n  }\n}\n\n    \n\n    \n        \n  TO-DO List\n\n  \n  Add task\n\n  \n    Not finished taskes\n    \n      \n        \n        {{\n          task.title\n        }}\n        &times;\n      \n    \n  \n\n  \n    Finished taskes\n    \n      \n        \n        {{\n          task.title\n        }}\n        &times;\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./todo-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  TO-DO List    Add task      Not finished taskes                          {{          task.title        }}        ×                  Finished taskes                          {{          task.title        }}        ×            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'TodoListComponent', 'selector': 'app-todo-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/todo-list/todo-list.component.ts\n            \n            component\n            TodoListComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                src/app/todo-list/todo-list.component.ts\n            \n            interface\n            Task\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.5.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^14.0.1\n        \n            @popperjs/core : ^2.11.6\n        \n            bootstrap : ^5.2.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInterview process\nOn this link you can read more about interview process.\nProject task\nYour task is to implement simple TODO application. User should be able to perform the following actions: \n\nCreate new task in TODO list\nMark any task as completed/uncompleted\nDelete any task from the task list\n\nGit\n\nYou are obligated to work with Git. Please fork this repository when you start your project.\n\nImportant notes\n\nThe scope of the task is to implement simple TODO application\nYou are not required to implement any database or backend service, but you can implement them if you feel more comfortable and if you want to demonstrate your skills\nImagine that this is official project and you are developing for one of our clients (this means we expect your code to be clean, commented and professional)\nLayout/design of your application should be exactly as on the screen provided in #ApplicationLayout section\nYou can use any font on Google Fonts similar to the font we used on the picture\nIf you are not sure about some feature or if you have any question please contact us\nYou are allowed to use any additional library/package (vuerouter, vuex etc.) or any frontend component library (bootstrap, vuetify etc.). If you decided not to use the Vue framework (and provided quick start project) then again you are allowed to use any other frontend framework including Angular 2 or React.\n\nApplication layout\nHere is an example how your application could look like.\n\nProject setup\nWe have prepared a simple Vue application so you can start working on your task by doing few clicks. You can perform the following commands in command line to install the project and start working.\n\nIMPORTANT: If you are not comfortable with Vue framework, you can choose any other framework you want (Angular 2, React). \n\n1.) Clone this repository\n2.) Install project dependencies\nnpm install3.) Compiles and hot-reloads for development\nnpm run serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nAppModule -->\n\nTodoListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'todo-list-ff1e2',\n    appId: '1:439793892035:web:56d722041605770508c076',\n    storageBucket: 'todo-list-ff1e2.appspot.com',\n    apiKey: 'AIzaSyAwu3LpDoyafbIT4xPaohbvlj2HMQYqaxw',\n    authDomain: 'todo-list-ff1e2.firebaseapp.com',\n    messagingSenderId: '439793892035',\n  },\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyAwu3LpDoyafbIT4xPaohbvlj2HMQYqaxw',\n    authDomain: 'todo-list-ff1e2.firebaseapp.com',\n    //   databaseURL: \"your-database-url\",\n    projectId: 'todo-list-ff1e2',\n    storageBucket: 'todo-list-ff1e2.appspot.com',\n    messagingSenderId: '439793892035',\n    appId: '1:439793892035:web:56d722041605770508c076',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
